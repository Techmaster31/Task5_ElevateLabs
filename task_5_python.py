# -*- coding: utf-8 -*-
"""Task_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rHxu3M7nxwudoTBmfng-1-cb0Ldt4hQn
"""

# Titanic EDA Notebook

# 1. Importing the Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# 2. Loading the dataset
df = pd.read_csv('train.csv')

# 3. Extracting the basic info
print("=== Dataset Info ===")
print(df.info())
print("\n=== Descriptive Statistics ===")
print(df.describe())
print("\n=== Missing Values ===")
print(df.isnull().sum())

# 4. Survival Counts (Exact numbers)
print("\n=== Survival Counts ===")
survival_counts = df['Survived'].value_counts()
print(f"Not Survived (0): {survival_counts[0]}")
print(f"Survived (1): {survival_counts[1]}")

# Finding the Percentage
print("\n=== Survival Percentage ===")
print(df['Survived'].value_counts(normalize=True) * 100)

# 5. Value Counts of other important features
print("\n=== Pclass Counts ===")
print(df['Pclass'].value_counts())

print("\n=== Sex Counts ===")
print(df['Sex'].value_counts())

print("\n=== Embarked Counts ===")
print(df['Embarked'].value_counts())

# 6. Visual Explorations

# a. Survival Count Bar Plot
sns.countplot(x='Survived', data=df)
plt.title('Survival Count (0 = No, 1 = Yes)')
plt.show()

# b. Gender vs Survival
sns.countplot(x='Sex', hue='Survived', data=df)
plt.title('Gender vs Survival')
plt.show()

# c. Pclass vs Survival
sns.countplot(x='Pclass', hue='Survived', data=df)
plt.title('Pclass vs Survival')
plt.show()

# d. Age Distribution
sns.histplot(df['Age'].dropna(), kde=True)
plt.title('Age Distribution')
plt.xlabel('Age')
plt.show()

# e. Age vs Survival
sns.boxplot(x='Survived', y='Age', data=df)
plt.title('Age vs Survival')
plt.show()

# f. Correlation Heatmap
plt.figure(figsize=(10,6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

# g. Pairplot
sns.pairplot(df.dropna(subset=['Age']), hue='Survived', vars=['Age', 'Fare', 'Pclass'])
plt.show()

# 7. Missing Value Handling (if needed later)
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)